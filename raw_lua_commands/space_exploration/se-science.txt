local science_packs = {{name='automation-science-pack'}, {name='logistic-science-pack'}, {name='military-science-pack'}, {name='chemical-science-pack'}, {name='production-science-pack'}, {name='utility-science-pack'}, {name='se-astronomic-science-pack-1'}, {name='se-astronomic-science-pack-2'}, {name='se-astronomic-science-pack-3'}, {name='se-astronomic-science-pack-4'}, {name='se-biological-science-pack-1'}, {name='se-biological-science-pack-2'}, {name='se-biological-science-pack-3'}, {name='se-biological-science-pack-4'}, {name='se-energy-science-pack-1'}, {name='se-energy-science-pack-2'}, {name='se-energy-science-pack-3'}, {name='se-energy-science-pack-4'}, {name='se-material-science-pack-1'}, {name='se-material-science-pack-2'}, {name='se-material-science-pack-3'}, {name='se-material-science-pack-4'}, {name='se-deep-space-science-pack-1'}, {name='se-deep-space-science-pack-2'}, {name='se-deep-space-science-pack-3'}, {name='se-deep-space-science-pack-4'}};

local science_colors = {{color='R'}, {color='G'}, {color='M'}, {color='B'}, {color='P'}, {color='Y'}, {color='AS1'}, {color='AS2'}, {color='AS3'}, {color='AS4'}, {color='BS1'}, {color='BS2'}, {color='BS3'}, {color='BS4'}, {color='ES1'}, {color='ES2'}, {color='ES3'}, {color='ES4'}, {color='MS1'}, {color='MS2'}, {color='MS3'}, {color='MS4'}, {color='DS1'}, {color='DS2'}, {color='DS3'}, {color='DS4'}}

local krastorio2_active = false;
for modname, _ in pairs(game.active_mods) do
    if string.sub(modname,1,string.len('Krastorio2'))=='Krastorio2' then
        krastorio2_active = true
    end
end
if krastorio2_active == true then
    table.insert(science_packs, {name='basic-tech-card'})
    table.insert(science_packs, {name='matter-tech-card'})
    table.insert(science_packs, {name='advanced-tech-card'})
    table.insert(science_packs, {name='singularity-tech-card'})

    table.insert(science_colors, {color='Basic'})
    table.insert(science_colors, {color='Matter'})
    table.insert(science_colors, {color='Advanced'})
    table.insert(science_colors, {color='Singularity'})
end

local function convert_si(value, unit)
 local out = '';
 if value > 1e12 then
  out = string.format('%.1f', value/1e12) .. 'T' .. unit;
 elseif value > 1e9 then
  out = string.format('%.1f', value/1e9) .. 'G' .. unit;
 elseif value > 1e6 then
  out = string.format('%.1f', value/1e6) .. 'M' .. unit;
 elseif value > 1e3 then
  out = string.format('%.1f', value/1e3) .. 'k' .. unit;
 else
  out = string.format('%.1f', value) .. unit;
 end
 return out;
end

output_string = 'Science production (last hour):'
for i, science in ipairs(science_packs) do
    local production = game.forces['player'].item_production_statistics.get_flow_count{name=science['name'], input=true, precision_index=defines.flow_precision_index.one_hour}
    if production > 0 then
        output_string = output_string .. ' ' .. science_colors[i]['color'] .. ':' .. convert_si(production, '/m');
    end
end
if output_string == 'Science production (last hour):' then
    output_string = output_string .. ' None.'
else
    output_string = output_string .. '.'
end
rcon.print(output_string)


