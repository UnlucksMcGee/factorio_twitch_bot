local science_packs = {{name='automation-science-pack'}, {name='logistic-science-pack'}, {name='military-science-pack'}, {name='chemical-science-pack'}, {name='production-science-pack'}, {name='utility-science-pack'}, {name='space-science-pack'}};

local science_colors = {{color='R'}, {color='G'}, {color='M'}, {color='B'}, {color='P'}, {color='Y'}, {color='W'}};

local function convert_si(value, unit)
 local out = '';
 if value > 1e12 then
  out = string.format('%.1f', value/1e12) .. 'T' .. unit;
 elseif value > 1e9 then
  out = string.format('%.1f', value/1e9) .. 'G' .. unit;
 elseif value > 1e6 then
  out = string.format('%.1f', value/1e6) .. 'M' .. unit;
 elseif value > 1e3 then
  out = string.format('%.1f', value/1e3) .. 'k' .. unit;
 else
  out = string.format('%.1f', value) .. unit;
 end
 return out;
end

output_string = 'Science production (last hour):'
for i, science in ipairs(science_packs) do
    local production = game.forces['player'].item_production_statistics.get_flow_count{name=science['name'], input=true, precision_index=defines.flow_precision_index.one_hour}
    output_string = output_string .. ' ' .. science_colors[i]['color'] .. ':' .. convert_si(production, '/m');
end
output_string = output_string .. '.'
rcon.print(output_string)


